{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\NLW05\\\\web\\\\src\\\\contexts\\\\PlayerContext.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from 'react';\nexport var PlayerContext = /*#__PURE__*/createContext({});\nexport var PlayerProvider = function PlayerProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      episodeList = _useState[0],\n      setEpisodeList = _useState[1];\n\n  var _useState2 = useState(false),\n      isPlaying = _useState2[0],\n      setIsPlaying = _useState2[1];\n\n  var _useState3 = useState(0),\n      currentEpisodeIndex = _useState3[0],\n      setCurrentEpisodeIndex = _useState3[1];\n\n  var play = function play(episode) {\n    setEpisodeList([episode]);\n    setCurrentEpisodeIndex(0);\n    setIsPlaying(true);\n  };\n\n  var togglePlay = function togglePlay() {\n    setIsPlaying(!isPlaying);\n  };\n\n  var onPlayKeyboard = function onPlayKeyboard(data) {\n    setIsPlaying(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: {\n      currentEpisodeIndex: currentEpisodeIndex,\n      episodeList: episodeList,\n      isPlaying: isPlaying,\n      play: play,\n      togglePlay: togglePlay,\n      onPlayKeyboard: onPlayKeyboard\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PlayerProvider, \"FYThUPiyGCPUBm4cPNVH/JgCWm4=\");\n\n_c = PlayerProvider;\nexport function usePlayer() {\n  _s2();\n\n  var _useContext = useContext(PlayerContext),\n      play = _useContext.play,\n      togglePlay = _useContext.togglePlay,\n      onPlayKeyboard = _useContext.onPlayKeyboard,\n      currentEpisodeIndex = _useContext.currentEpisodeIndex,\n      episodeList = _useContext.episodeList,\n      isPlaying = _useContext.isPlaying;\n\n  return {\n    play: play,\n    togglePlay: togglePlay,\n    onPlayKeyboard: onPlayKeyboard,\n    currentEpisodeIndex: currentEpisodeIndex,\n    episodeList: episodeList,\n    isPlaying: isPlaying\n  };\n}\n\n_s2(usePlayer, \"xAQK0yVBFAcEIYyb+sD6gwTGCF4=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerProvider\");","map":{"version":3,"sources":["C:/NLW05/web/src/contexts/PlayerContext.tsx"],"names":["createContext","useContext","useState","PlayerContext","PlayerProvider","children","episodeList","setEpisodeList","isPlaying","setIsPlaying","currentEpisodeIndex","setCurrentEpisodeIndex","play","episode","togglePlay","onPlayKeyboard","data","usePlayer"],"mappings":";;;;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AA6BA,OAAO,IAAMC,aAAa,gBAAGH,aAAa,CAAoB,EAApB,CAAnC;AAEP,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACRH,QAAQ,CAAC,EAAD,CADA;AAAA,MACvCI,WADuC;AAAA,MAC1BC,cAD0B;;AAAA,mBAEZL,QAAQ,CAAC,KAAD,CAFI;AAAA,MAEvCM,SAFuC;AAAA,MAE5BC,YAF4B;;AAAA,mBAGQP,QAAQ,CAAC,CAAD,CAHhB;AAAA,MAGvCQ,mBAHuC;AAAA,MAGlBC,sBAHkB;;AAK9C,MAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,OAAD,EAAsB;AACjCN,IAAAA,cAAc,CAAC,CAACM,OAAD,CAAD,CAAd;AACAF,IAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACAF,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAJD;;AAMA,MAAMK,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBL,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAIA,MAAMO,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAmB;AACxCP,IAAAA,YAAY,CAACO,IAAD,CAAZ;AACD,GAFD;;AAIA,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLN,MAAAA,mBAAmB,EAAnBA,mBADK;AAELJ,MAAAA,WAAW,EAAXA,WAFK;AAGLE,MAAAA,SAAS,EAATA,SAHK;AAILI,MAAAA,IAAI,EAAJA,IAJK;AAKLE,MAAAA,UAAU,EAAVA,UALK;AAMLC,MAAAA,cAAc,EAAdA;AANK,KADT;AAAA,cAUGV;AAVH;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CAjCM;;GAAMD,c;;KAAAA,c;AAmCb,OAAO,SAASa,SAAT,GAAoB;AAAA;;AAAA,oBACkEhB,UAAU,CAACE,aAAD,CAD5E;AAAA,MAChBS,IADgB,eAChBA,IADgB;AAAA,MACVE,UADU,eACVA,UADU;AAAA,MACEC,cADF,eACEA,cADF;AAAA,MACkBL,mBADlB,eACkBA,mBADlB;AAAA,MACuCJ,WADvC,eACuCA,WADvC;AAAA,MACoDE,SADpD,eACoDA,SADpD;;AAGxB,SAAO;AAAEI,IAAAA,IAAI,EAAJA,IAAF;AAAQE,IAAAA,UAAU,EAAVA,UAAR;AAAoBC,IAAAA,cAAc,EAAdA,cAApB;AAAoCL,IAAAA,mBAAmB,EAAnBA,mBAApC;AAAyDJ,IAAAA,WAAW,EAAXA,WAAzD;AAAsEE,IAAAA,SAAS,EAATA;AAAtE,GAAP;AACF;;IAJeS,S","sourcesContent":["import { createContext, useContext, useState } from 'react';\r\nimport { ReactNode } from 'react';\r\n\r\ninterface Episode {\r\n  id: number,\r\n  title: string,\r\n  members: string,\r\n  published_at: Date,\r\n  published_at_Formatted: string,\r\n  thumbnail: string,\r\n  description: string,\r\n  duration: number,\r\n  durationFormatted: string,\r\n  url: string,\r\n}\r\n\r\ninterface PlayerContextData {\r\n  episodeList: Episode[];\r\n  currentEpisodeIndex: number;\r\n  isPlaying: boolean;\r\n  play: (episode) => void;\r\n  togglePlay: () => void;\r\n  onPlayKeyboard: (data: boolean) => void;\r\n}\r\n\r\ninterface PlayerContextProviderProps {\r\n  children: ReactNode\r\n}\r\n\r\nexport const PlayerContext = createContext<PlayerContextData>({} as PlayerContextData);\r\n\r\nexport const PlayerProvider = ({ children }) => {\r\n  const [episodeList, setEpisodeList] = useState([]);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentEpisodeIndex, setCurrentEpisodeIndex] = useState(0);\r\n\r\n  const play = (episode: Episode) => {\r\n    setEpisodeList([episode]);\r\n    setCurrentEpisodeIndex(0);\r\n    setIsPlaying(true);\r\n  }\r\n\r\n  const togglePlay = () => {\r\n    setIsPlaying(!isPlaying);\r\n  }\r\n\r\n  const onPlayKeyboard = (data: boolean) => {\r\n    setIsPlaying(data);\r\n  }\r\n\r\n  return (\r\n    <PlayerContext.Provider \r\n      value={{\r\n        currentEpisodeIndex,\r\n        episodeList,\r\n        isPlaying,\r\n        play,\r\n        togglePlay,\r\n        onPlayKeyboard\r\n      }}\r\n    >\r\n      {children}\r\n    </PlayerContext.Provider>\r\n  );\r\n}\r\n\r\nexport function usePlayer(){\r\n   const { play, togglePlay, onPlayKeyboard, currentEpisodeIndex, episodeList, isPlaying } = useContext(PlayerContext);\r\n\r\n   return { play, togglePlay, onPlayKeyboard, currentEpisodeIndex, episodeList, isPlaying };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}