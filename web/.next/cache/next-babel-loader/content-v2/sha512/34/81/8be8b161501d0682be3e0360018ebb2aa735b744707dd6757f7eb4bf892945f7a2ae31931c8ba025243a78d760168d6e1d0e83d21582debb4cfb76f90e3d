{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\NLW05\\\\web\\\\src\\\\contexts\\\\PlayerContext.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from 'react';\nexport var PlayerContext = /*#__PURE__*/createContext({});\nexport var PlayerProvider = function PlayerProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      episodeList = _useState[0],\n      setEpisodeList = _useState[1];\n\n  var _useState2 = useState(false),\n      isPlaying = _useState2[0],\n      setIsPlaying = _useState2[1];\n\n  var _useState3 = useState(0),\n      currentEpisodeIndex = _useState3[0],\n      setCurrentEpisodeIndex = _useState3[1];\n\n  var _useState4 = useState(false),\n      enablePreviousAndNextButton = _useState4[0],\n      setEnablePreviousAndNextButton = _useState4[1];\n\n  var _useState5 = useState(false),\n      isLooping = _useState5[0],\n      setIsLooping = _useState5[1];\n\n  var _useState6 = useState(false),\n      isShuffle = _useState6[0],\n      setIsShuffle = _useState6[1];\n\n  var play = function play(episode) {\n    setEpisodeList([episode]);\n    setCurrentEpisodeIndex(0);\n    setIsPlaying(true);\n    setEnablePreviousAndNextButton(false);\n  };\n\n  var playList = function playList(list, index) {\n    setEpisodeList(list);\n    setCurrentEpisodeIndex(index);\n    setIsPlaying(true);\n    setEnablePreviousAndNextButton(true);\n  };\n\n  var togglePlay = function togglePlay() {\n    setIsPlaying(!isPlaying);\n  };\n\n  var toggleLooping = function toggleLooping() {\n    setIsLooping(!isLooping);\n  };\n\n  var toggleShuffle = function toggleShuffle() {\n    setIsShuffle(!isShuffle);\n  };\n\n  var onPlayKeyboard = function onPlayKeyboard(data) {\n    setIsPlaying(data);\n  };\n\n  var playNext = function playNext() {\n    if (isShuffle) {\n      var nextEpisode = Math.floor(Math.random() * episodeList.length);\n    } else {\n      if (currentEpisodeIndex >= episodeList.length - 1) {\n        return setCurrentEpisodeIndex(0);\n      }\n\n      setCurrentEpisodeIndex(currentEpisodeIndex + 1);\n    }\n  };\n\n  var playPrevious = function playPrevious() {\n    if (currentEpisodeIndex <= 0) {\n      return setCurrentEpisodeIndex(episodeList.length - 1);\n    }\n\n    setCurrentEpisodeIndex(currentEpisodeIndex - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: {\n      currentEpisodeIndex: currentEpisodeIndex,\n      episodeList: episodeList,\n      isPlaying: isPlaying,\n      isLooping: isLooping,\n      isShuffle: isShuffle,\n      play: play,\n      togglePlay: togglePlay,\n      onPlayKeyboard: onPlayKeyboard,\n      playList: playList,\n      playNext: playNext,\n      playPrevious: playPrevious,\n      toggleLooping: toggleLooping,\n      toggleShuffle: toggleShuffle,\n      enablePreviousAndNextButton: enablePreviousAndNextButton\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PlayerProvider, \"xHay41yZ46aCNWzFpJ6oxSLo/m8=\");\n\n_c = PlayerProvider;\nexport function usePlayer() {\n  _s2();\n\n  var _useContext = useContext(PlayerContext),\n      play = _useContext.play,\n      togglePlay = _useContext.togglePlay,\n      onPlayKeyboard = _useContext.onPlayKeyboard,\n      playList = _useContext.playList,\n      playNext = _useContext.playNext,\n      playPrevious = _useContext.playPrevious,\n      toggleLooping = _useContext.toggleLooping,\n      toggleShuffle = _useContext.toggleShuffle,\n      isLooping = _useContext.isLooping,\n      enablePreviousAndNextButton = _useContext.enablePreviousAndNextButton,\n      currentEpisodeIndex = _useContext.currentEpisodeIndex,\n      episodeList = _useContext.episodeList,\n      isPlaying = _useContext.isPlaying,\n      isShuffle = _useContext.isShuffle;\n\n  return {\n    play: play,\n    togglePlay: togglePlay,\n    onPlayKeyboard: onPlayKeyboard,\n    playList: playList,\n    playNext: playNext,\n    playPrevious: playPrevious,\n    toggleLooping: toggleLooping,\n    toggleShuffle: toggleShuffle,\n    isLooping: isLooping,\n    enablePreviousAndNextButton: enablePreviousAndNextButton,\n    currentEpisodeIndex: currentEpisodeIndex,\n    episodeList: episodeList,\n    isPlaying: isPlaying,\n    isShuffle: isShuffle\n  };\n}\n\n_s2(usePlayer, \"cXc/oYn1pIBH8GspJUZnL1lv5LM=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerProvider\");","map":{"version":3,"sources":["C:/NLW05/web/src/contexts/PlayerContext.tsx"],"names":["createContext","useContext","useState","PlayerContext","PlayerProvider","children","episodeList","setEpisodeList","isPlaying","setIsPlaying","currentEpisodeIndex","setCurrentEpisodeIndex","enablePreviousAndNextButton","setEnablePreviousAndNextButton","isLooping","setIsLooping","isShuffle","setIsShuffle","play","episode","playList","list","index","togglePlay","toggleLooping","toggleShuffle","onPlayKeyboard","data","playNext","nextEpisode","Math","floor","random","length","playPrevious","usePlayer"],"mappings":"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","sourcesContent":["import { createContext, useContext, useState } from 'react';\r\nimport { ReactNode } from 'react';\r\n\r\ninterface Episode {\r\n  id: string,      \r\n  title: string,\r\n  members: string,\r\n  published_at: string,\r\n  thumbnail: string,\r\n  description: string,\r\n  url: string,\r\n  duration: number,\r\n  published_at_Formatted: string,\r\n  durationFormatted: string\r\n}\r\n\r\ninterface PlayerContextData {\r\n  episodeList: Episode[];\r\n  currentEpisodeIndex: number;\r\n  isPlaying: boolean;\r\n  isLooping: boolean;\r\n  isShuffle: boolean;\r\n  play: (episode) => void;\r\n  togglePlay: () => void;\r\n  onPlayKeyboard: (data: boolean) => void;\r\n  playList: (list: Episode[], index: number) => void;\r\n  playNext: () => void;\r\n  playPrevious: () => void;\r\n  toggleLooping: () => void;\r\n  toggleShuffle: () => void;\r\n  enablePreviousAndNextButton: boolean;\r\n}\r\n\r\ninterface PlayerContextProviderProps {\r\n  children: ReactNode\r\n}\r\n\r\nexport const PlayerContext = createContext<PlayerContextData>({} as PlayerContextData);\r\n\r\nexport const PlayerProvider = ({ children }: PlayerContextProviderProps) => {\r\n  const [episodeList, setEpisodeList] = useState([]);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentEpisodeIndex, setCurrentEpisodeIndex] = useState(0);\r\n  const [enablePreviousAndNextButton, setEnablePreviousAndNextButton] = useState(false);\r\n  const [isLooping, setIsLooping] = useState(false);\r\n  const [isShuffle, setIsShuffle] = useState(false);\r\n\r\n  const play = (episode: Episode) => {\r\n    setEpisodeList([episode]);\r\n    setCurrentEpisodeIndex(0);\r\n    setIsPlaying(true);\r\n    setEnablePreviousAndNextButton(false);\r\n  }\r\n\r\n  const playList = (list: Episode[], index: number) => {\r\n    setEpisodeList(list);\r\n    setCurrentEpisodeIndex(index);\r\n    setIsPlaying(true);\r\n    setEnablePreviousAndNextButton(true);\r\n  }\r\n\r\n  const togglePlay = () => {\r\n    setIsPlaying(!isPlaying);\r\n  }\r\n\r\n  const toggleLooping = () => {\r\n    setIsLooping(!isLooping);\r\n  }\r\n\r\n  const toggleShuffle = () => {\r\n    setIsShuffle(!isShuffle);\r\n  }\r\n\r\n  const onPlayKeyboard = (data: boolean) => {\r\n    setIsPlaying(data);\r\n  }\r\n\r\n  const playNext = () => {\r\n    if(isShuffle){\r\n      const nextEpisode = Math.floor(Math.random() * episodeList.length);\r\n    }else {\r\n      if(currentEpisodeIndex >= episodeList.length - 1){\r\n        return setCurrentEpisodeIndex(0);\r\n      }\r\n      setCurrentEpisodeIndex(currentEpisodeIndex + 1);\r\n    }\r\n  }\r\n\r\n  const playPrevious = () => {\r\n    if(currentEpisodeIndex <= 0){\r\n      return setCurrentEpisodeIndex(episodeList.length - 1);\r\n    }\r\n    setCurrentEpisodeIndex(currentEpisodeIndex - 1);\r\n  }\r\n\r\n  return (\r\n    <PlayerContext.Provider \r\n      value={{\r\n        currentEpisodeIndex,\r\n        episodeList,\r\n        isPlaying,\r\n        isLooping,\r\n        isShuffle,\r\n        play,\r\n        togglePlay,\r\n        onPlayKeyboard,\r\n        playList,\r\n        playNext,\r\n        playPrevious,\r\n        toggleLooping,\r\n        toggleShuffle,\r\n        enablePreviousAndNextButton,\r\n      }}\r\n    >\r\n      {children}\r\n    </PlayerContext.Provider>\r\n  );\r\n}\r\n\r\nexport function usePlayer(){\r\n   const { \r\n     play,\r\n     togglePlay, \r\n     onPlayKeyboard, \r\n     playList, \r\n     playNext, \r\n     playPrevious, \r\n     toggleLooping , \r\n     toggleShuffle,\r\n     isLooping, \r\n     enablePreviousAndNextButton, \r\n     currentEpisodeIndex, \r\n     episodeList, \r\n     isPlaying,\r\n     isShuffle, \r\n   } = useContext(PlayerContext);\r\n\r\n   return { \r\n     play, \r\n     togglePlay, \r\n     onPlayKeyboard, \r\n     playList, \r\n     playNext, \r\n     playPrevious, \r\n     toggleLooping,\r\n     toggleShuffle,\r\n     isLooping, \r\n     enablePreviousAndNextButton, \r\n     currentEpisodeIndex, \r\n     episodeList, \r\n     isPlaying,\r\n     isShuffle, \r\n   };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}