{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\NLW05\\\\web\\\\src\\\\pages\\\\index.tsx\";\nexport var __N_SSG = true;\nexport default function Home(props) {\n  var episodes = props.episodes;\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/NLW05/web/src/pages/index.tsx"],"names":["Home","props","episodes"],"mappings":";;;AAuBA,eAAe,SAASA,IAAT,CAAcC,KAAd,EAA+B;AAAA,MACpCC,QADoC,GACvBD,KADuB,CACpCC,QADoC;AAE5C,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;KALuBF,I","sourcesContent":["import { GetStaticProps } from 'next';\nimport { format } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport api from \"../services/api\";\n\ntype Episode = {\n  id: string,      \n  title: string,\n  members: string,\n  published_at: string,\n  thumbnail: string,\n  description: string,\n  file: {\n    url: string,\n    type: string,\n    duration: number\n  }\n}\n\ntype HomeProps = {\n  episodes: Episode[];\n}\n\nexport default function Home(props: HomeProps){\n  const { episodes } = props;\n  return (\n    <div/>\n  );\n}\n\nexport const getStaticProps:GetStaticProps = async() => {\n  const { data } = await api.get('/episodes?', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n\n  const episodes = data.map((episode) => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      members: episode.members,\n      published_at: episode.published_at,\n      published_At_Formatted: format(new Date(episode.publided_at), 'd MMM YY', { locale: ptBR }),\n      thumbnail: episode.thumbnail,\n      description: episode.description,\n      file: {\n        url: episode.url,\n        type: episode.type,\n        duration: episode.duration\n      }\n    };\n  });\n\n  return {\n    props: {\n      episodes: data,\n    },\n    revalidate: 60 * 60 * 8,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}