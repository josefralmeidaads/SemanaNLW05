{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\NLW05\\\\web\\\\src\\\\contexts\\\\PlayerContext.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from 'react';\nexport var PlayerContext = /*#__PURE__*/createContext({});\nexport var PlayerProvider = function PlayerProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      episodeList = _useState[0],\n      setEpisodeList = _useState[1];\n\n  var _useState2 = useState(0),\n      currentEpisodeIndex = _useState2[0],\n      setCurrentEpisodeIndex = _useState2[1];\n\n  var play = function play(episode) {\n    setEpisodeList([episode]);\n    setCurrentEpisodeIndex(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: {\n      currentEpisodeIndex: currentEpisodeIndex,\n      episodeList: episodeList,\n      play: play\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PlayerProvider, \"h6it6iAD/fVAAP2wUGb44fgyx70=\");\n\n_c = PlayerProvider;\nexport function usePlayer() {\n  _s2();\n\n  var _useContext = useContext(PlayerContext),\n      play = _useContext.play,\n      currentEpisodeIndex = _useContext.currentEpisodeIndex,\n      episodeList = _useContext.episodeList;\n\n  return {\n    play: play,\n    currentEpisodeIndex: currentEpisodeIndex,\n    episodeList: episodeList\n  };\n}\n\n_s2(usePlayer, \"WfEKQkmY5O5VD0R2Mlw62/3h9V8=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerProvider\");","map":{"version":3,"sources":["C:/NLW05/web/src/contexts/PlayerContext.tsx"],"names":["createContext","useContext","useState","PlayerContext","PlayerProvider","children","episodeList","setEpisodeList","currentEpisodeIndex","setCurrentEpisodeIndex","play","episode","usePlayer"],"mappings":";;;;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AAgBA,OAAO,IAAMC,aAAa,gBAAGH,aAAa,CAAoB,EAApB,CAAnC;AAEP,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACRH,QAAQ,CAAC,EAAD,CADA;AAAA,MACvCI,WADuC;AAAA,MAC1BC,cAD0B;;AAAA,mBAEQL,QAAQ,CAAC,CAAD,CAFhB;AAAA,MAEvCM,mBAFuC;AAAA,MAElBC,sBAFkB;;AAI9C,MAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,OAAD,EAAa;AACxBJ,IAAAA,cAAc,CAAC,CAACI,OAAD,CAAD,CAAd;AACAF,IAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACD,GAHD;;AAKA,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,mBAAmB,EAAnBA,mBADK;AAELF,MAAAA,WAAW,EAAXA,WAFK;AAGLI,MAAAA,IAAI,EAAJA;AAHK,KADT;AAAA,cAOGL;AAPH;AAAA;AAAA;AAAA;AAAA,WADF;AAWD,CApBM;;GAAMD,c;;KAAAA,c;AAsBb,OAAO,SAASQ,SAAT,GAAoB;AAAA;;AAAA,oBAC2BX,UAAU,CAACE,aAAD,CADrC;AAAA,MAChBO,IADgB,eAChBA,IADgB;AAAA,MACVF,mBADU,eACVA,mBADU;AAAA,MACWF,WADX,eACWA,WADX;;AAGxB,SAAO;AAAEI,IAAAA,IAAI,EAAJA,IAAF;AAAQF,IAAAA,mBAAmB,EAAnBA,mBAAR;AAA6BF,IAAAA,WAAW,EAAXA;AAA7B,GAAP;AACF;;IAJeM,S","sourcesContent":["import { createContext, useContext, useState } from 'react';\r\nimport { ReactNode } from 'react';\r\n\r\ninterface Episode {\r\n  title: string;\r\n  members: string;\r\n  thumbnail: string;\r\n  duration: string;\r\n}\r\n\r\ninterface PlayerContextData {\r\n  episodeList: Episode[];\r\n  currentEpisodeIndex: number;\r\n  play: (episode) => void;\r\n}\r\n\r\nexport const PlayerContext = createContext<PlayerContextData>({} as PlayerContextData);\r\n\r\nexport const PlayerProvider = ({ children }) => {\r\n  const [episodeList, setEpisodeList] = useState([]);\r\n  const [currentEpisodeIndex, setCurrentEpisodeIndex] = useState(0);\r\n\r\n  const play = (episode) => {\r\n    setEpisodeList([episode]);\r\n    setCurrentEpisodeIndex(0);\r\n  }\r\n\r\n  return (\r\n    <PlayerContext.Provider \r\n      value={{\r\n        currentEpisodeIndex,\r\n        episodeList,\r\n        play,\r\n      }}\r\n    >\r\n      {children}\r\n    </PlayerContext.Provider>\r\n  );\r\n}\r\n\r\nexport function usePlayer(){\r\n   const { play, currentEpisodeIndex, episodeList } = useContext(PlayerContext);\r\n\r\n   return { play, currentEpisodeIndex, episodeList };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}