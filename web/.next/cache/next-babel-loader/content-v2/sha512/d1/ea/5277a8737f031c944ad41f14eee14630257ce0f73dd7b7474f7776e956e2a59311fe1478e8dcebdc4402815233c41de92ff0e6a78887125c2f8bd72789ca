{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\NLW05\\\\web\\\\src\\\\pages\\\\index.tsx\";\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport api from \"../services/api\";\nimport convertDurationToTimeString from '../utils/convertDurationToTimeString';\nexport default function Home(props) {\n  const {\n    episodes\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticProps = async () => {\n  const {\n    data\n  } = await api.get('/episodes?', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      members: episode.members,\n      published_at: episode.published_at,\n      published_at_Formatted: format(parseISO(episode.published_at), 'd MMM yy', {\n        locale: ptBR\n      }),\n      thumbnail: episode.thumbnail,\n      description: episode.description,\n      duration: Number(episode.file.duration),\n      durationFormatted: convertDurationToTimeString(Number(episode.file.duration)),\n      url: Number(episode.file.url)\n    };\n  });\n  return {\n    props: {\n      episodes: episodes\n    },\n    revalidate: 60 * 60 * 8\n  };\n};","map":{"version":3,"sources":["C:/NLW05/web/src/pages/index.tsx"],"names":["format","parseISO","ptBR","api","convertDurationToTimeString","Home","props","episodes","getStaticProps","data","get","params","_limit","_sort","_order","map","episode","id","title","members","published_at","published_at_Formatted","locale","thumbnail","description","duration","Number","file","durationFormatted","url","revalidate"],"mappings":";;AACA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,2BAAP,MAAwC,sCAAxC;AAmBA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAA+B;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;AAED,OAAO,MAAME,cAA6B,GAAG,YAAW;AACtD,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMN,GAAG,CAACO,GAAJ,CAAQ,YAAR,EAAsB;AAC3CC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE,cAFD;AAGNC,MAAAA,MAAM,EAAE;AAHF;AADmC,GAAtB,CAAvB;AAQA,QAAMP,QAAQ,GAAGE,IAAI,CAACM,GAAL,CAAUC,OAAD,IAAa;AACrC,WAAO;AACLC,MAAAA,EAAE,EAAED,OAAO,CAACC,EADP;AAELC,MAAAA,KAAK,EAAEF,OAAO,CAACE,KAFV;AAGLC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OAHZ;AAILC,MAAAA,YAAY,EAAEJ,OAAO,CAACI,YAJjB;AAKLC,MAAAA,sBAAsB,EAAErB,MAAM,CAACC,QAAQ,CAACe,OAAO,CAACI,YAAT,CAAT,EAAiC,UAAjC,EAA6C;AAAEE,QAAAA,MAAM,EAAEpB;AAAV,OAA7C,CALzB;AAMLqB,MAAAA,SAAS,EAAEP,OAAO,CAACO,SANd;AAOLC,MAAAA,WAAW,EAAER,OAAO,CAACQ,WAPhB;AAQLC,MAAAA,QAAQ,EAAEC,MAAM,CAACV,OAAO,CAACW,IAAR,CAAaF,QAAd,CARX;AASLG,MAAAA,iBAAiB,EAAExB,2BAA2B,CAACsB,MAAM,CAACV,OAAO,CAACW,IAAR,CAAaF,QAAd,CAAP,CATzC;AAULI,MAAAA,GAAG,EAAEH,MAAM,CAACV,OAAO,CAACW,IAAR,CAAaE,GAAd;AAVN,KAAP;AAYD,GAbgB,CAAjB;AAeA,SAAO;AACLvB,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAEA;AADL,KADF;AAILuB,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU;AAJjB,GAAP;AAMD,CA9BM","sourcesContent":["import { GetStaticProps } from 'next';\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport api from \"../services/api\";\nimport convertDurationToTimeString from '../utils/convertDurationToTimeString';\n\ntype Episode = {\n  id: string,      \n  title: string,\n  members: string,\n  published_at: string,\n  thumbnail: string,\n  description: string,\n  url: string,\n  duration: number,\n  published_at_Formatted: Date,\n  durationFormatted: string\n}\n\ntype HomeProps = {\n  episodes: Episode[];\n}\n\nexport default function Home(props: HomeProps){\n  const { episodes } = props;\n  return (\n    <div/>\n  );\n}\n\nexport const getStaticProps:GetStaticProps = async() => {\n  const { data } = await api.get('/episodes?', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n\n  const episodes = data.map((episode) => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      members: episode.members,\n      published_at: episode.published_at,\n      published_at_Formatted: format(parseISO(episode.published_at), 'd MMM yy', { locale: ptBR }),\n      thumbnail: episode.thumbnail,\n      description: episode.description,\n      duration: Number(episode.file.duration),\n      durationFormatted: convertDurationToTimeString(Number(episode.file.duration)),\n      url: Number(episode.file.url),\n    };\n  });\n\n  return {\n    props: {\n      episodes: episodes,\n    },\n    revalidate: 60 * 60 * 8,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}