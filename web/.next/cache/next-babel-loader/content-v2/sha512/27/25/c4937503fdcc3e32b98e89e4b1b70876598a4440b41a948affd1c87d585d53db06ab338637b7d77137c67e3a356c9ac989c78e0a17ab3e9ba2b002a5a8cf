{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\NLW05\\\\web\\\\src\\\\pages\\\\index.tsx\";\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { HomePage, LatestEpisodes, AllEpisodes } from '../styles/styleIndex';\nimport api from \"../services/api\";\nimport convertDurationToTimeString from '../utils/convertDurationToTimeString';\nexport default function Home({\n  allEpisodes,\n  latestEpisodes\n}) {\n  return /*#__PURE__*/_jsxDEV(HomePage, {\n    children: [/*#__PURE__*/_jsxDEV(LatestEpisodes, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\xDAltimos lan\\xE7amentos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: allEpisodes.map(episode => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"\",\n            children: episode.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AllEpisodes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticProps = async () => {\n  const {\n    data\n  } = await api.get('/episodes?', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      members: episode.members,\n      published_at: episode.published_at,\n      published_at_Formatted: format(parseISO(episode.published_at), 'd MMM yy', {\n        locale: ptBR\n      }),\n      thumbnail: episode.thumbnail,\n      description: episode.description,\n      duration: Number(episode.file.duration),\n      durationFormatted: convertDurationToTimeString(Number(episode.file.duration)),\n      url: Number(episode.file.url)\n    };\n  });\n  const latestEpisodes = episodes.slice(0, 2);\n  const allEpisodes = episodes.slice(2, episodes.length);\n  return {\n    props: {\n      latestEpisodes,\n      allEpisodes\n    },\n    revalidate: 60 * 60 * 8\n  };\n};","map":{"version":3,"sources":["C:/NLW05/web/src/pages/index.tsx"],"names":["format","parseISO","ptBR","HomePage","LatestEpisodes","AllEpisodes","api","convertDurationToTimeString","Home","allEpisodes","latestEpisodes","map","episode","title","getStaticProps","data","get","params","_limit","_sort","_order","episodes","id","members","published_at","published_at_Formatted","locale","thumbnail","description","duration","Number","file","durationFormatted","url","slice","length","props","revalidate"],"mappings":";;AACA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AAEA,SACEC,QADF,EAEEC,cAFF,EAGEC,WAHF,QAIO,sBAJP;AAKA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,2BAAP,MAAwC,sCAAxC;AAoBA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAd,EAAyD;AACtE,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,cAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAA,kBACGD,WAAW,CAACE,GAAZ,CAAiBC,OAAD,iBACf;AAAA,iCACE;AAAG,YAAA,IAAI,EAAC,EAAR;AAAA,sBAAYA,OAAO,CAACC;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;AAED,OAAO,MAAMC,cAA6B,GAAG,YAAW;AACtD,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMT,GAAG,CAACU,GAAJ,CAAQ,YAAR,EAAsB;AAC3CC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE,cAFD;AAGNC,MAAAA,MAAM,EAAE;AAHF;AADmC,GAAtB,CAAvB;AAQA,QAAMC,QAAQ,GAAGN,IAAI,CAACJ,GAAL,CAAUC,OAAD,IAAa;AACrC,WAAO;AACLU,MAAAA,EAAE,EAAEV,OAAO,CAACU,EADP;AAELT,MAAAA,KAAK,EAAED,OAAO,CAACC,KAFV;AAGLU,MAAAA,OAAO,EAAEX,OAAO,CAACW,OAHZ;AAILC,MAAAA,YAAY,EAAEZ,OAAO,CAACY,YAJjB;AAKLC,MAAAA,sBAAsB,EAAEzB,MAAM,CAACC,QAAQ,CAACW,OAAO,CAACY,YAAT,CAAT,EAAiC,UAAjC,EAA6C;AAAEE,QAAAA,MAAM,EAAExB;AAAV,OAA7C,CALzB;AAMLyB,MAAAA,SAAS,EAAEf,OAAO,CAACe,SANd;AAOLC,MAAAA,WAAW,EAAEhB,OAAO,CAACgB,WAPhB;AAQLC,MAAAA,QAAQ,EAAEC,MAAM,CAAClB,OAAO,CAACmB,IAAR,CAAaF,QAAd,CARX;AASLG,MAAAA,iBAAiB,EAAEzB,2BAA2B,CAACuB,MAAM,CAAClB,OAAO,CAACmB,IAAR,CAAaF,QAAd,CAAP,CATzC;AAULI,MAAAA,GAAG,EAAEH,MAAM,CAAClB,OAAO,CAACmB,IAAR,CAAaE,GAAd;AAVN,KAAP;AAYD,GAbgB,CAAjB;AAeA,QAAMvB,cAAc,GAAGW,QAAQ,CAACa,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAvB;AACA,QAAMzB,WAAW,GAAGY,QAAQ,CAACa,KAAT,CAAe,CAAf,EAAkBb,QAAQ,CAACc,MAA3B,CAApB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACL1B,MAAAA,cADK;AAELD,MAAAA;AAFK,KADF;AAKL4B,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU;AALjB,GAAP;AAOD,CAlCM","sourcesContent":["import { GetStaticProps } from 'next';\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\n\nimport {\n  HomePage,\n  LatestEpisodes,\n  AllEpisodes,\n} from '../styles/styleIndex';\nimport api from \"../services/api\";\nimport convertDurationToTimeString from '../utils/convertDurationToTimeString';\n\ntype Episode = {\n  id: string,      \n  title: string,\n  members: string,\n  published_at: string,\n  thumbnail: string,\n  description: string,\n  url: string,\n  duration: number,\n  published_at_Formatted: string,\n  durationFormatted: string\n}\n\ntype HomeProps = {\n  allEpisodes: Episode[];\n  latestEpisodes: Episode[];\n}\n\nexport default function Home({ allEpisodes, latestEpisodes }: HomeProps){\n  return (\n    <HomePage>\n      <LatestEpisodes>\n        <h2>Últimos lançamentos</h2>\n\n        <ul>\n          {allEpisodes.map((episode) => (\n            <li>\n              <a href=\"\">{episode.title}</a>\n            </li>\n          ))}\n        </ul>\n      </LatestEpisodes>\n      <AllEpisodes></AllEpisodes>\n    </HomePage>\n  );\n}\n\nexport const getStaticProps:GetStaticProps = async() => {\n  const { data } = await api.get('/episodes?', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n\n  const episodes = data.map((episode) => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      members: episode.members,\n      published_at: episode.published_at,\n      published_at_Formatted: format(parseISO(episode.published_at), 'd MMM yy', { locale: ptBR }),\n      thumbnail: episode.thumbnail,\n      description: episode.description,\n      duration: Number(episode.file.duration),\n      durationFormatted: convertDurationToTimeString(Number(episode.file.duration)),\n      url: Number(episode.file.url),\n    };\n  });\n\n  const latestEpisodes = episodes.slice(0, 2);\n  const allEpisodes = episodes.slice(2, episodes.length);\n\n  return {\n    props: {\n      latestEpisodes,\n      allEpisodes,\n    },\n    revalidate: 60 * 60 * 8,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}