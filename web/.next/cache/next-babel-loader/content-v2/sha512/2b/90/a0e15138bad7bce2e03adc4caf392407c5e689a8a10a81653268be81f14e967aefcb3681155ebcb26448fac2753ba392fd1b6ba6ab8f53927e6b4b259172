{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\NLW05\\\\web\\\\src\\\\pages\\\\episodes\\\\[slug].tsx\";\nimport React from 'react';\nimport format from 'date-fns/format';\nimport parseISO from 'date-fns/parseISO';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport api from '../../services/api';\nimport convertDurationToTimeString from '../../utils/convertDurationToTimeString';\nimport { Episode, ThumbnailContainer, ThumbnailButton } from './styles';\n\nconst episodes = ({\n  episode\n}) => {\n  return /*#__PURE__*/_jsxDEV(Episode, {\n    children: /*#__PURE__*/_jsxDEV(ThumbnailContainer, {\n      children: /*#__PURE__*/_jsxDEV(ThumbnailButton, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/arrow-left.svg\",\n          alt: \"voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  return {\n    paths: [],\n    fallback: 'blocking'\n  };\n};\nexport const getStaticProps = async context => {\n  const {\n    slug\n  } = context.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    members: data.members,\n    published_at: data.published_at,\n    published_at_Formatted: format(parseISO(data.published_at), 'd MMM yy', {\n      locale: ptBR\n    }),\n    thumbnail: data.thumbnail,\n    description: data.description,\n    duration: Number(data.file.duration),\n    durationFormatted: convertDurationToTimeString(Number(data.file.duration)),\n    url: Number(data.file.url)\n  };\n  return {\n    props: {\n      episode\n    },\n    revalidate: 60 * 60 * 24 // segundos * minutos * horas\n\n  };\n};\nexport default episodes;","map":{"version":3,"sources":["C:/NLW05/web/src/pages/episodes/[slug].tsx"],"names":["React","format","parseISO","ptBR","api","convertDurationToTimeString","Episode","ThumbnailContainer","ThumbnailButton","episodes","episode","getStaticPaths","paths","fallback","getStaticProps","context","slug","params","data","get","id","title","members","published_at","published_at_Formatted","locale","thumbnail","description","duration","Number","file","durationFormatted","url","props","revalidate"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,2BAAP,MAAwC,yCAAxC;AACA,SACEC,OADF,EAEEC,kBAFF,EAGEC,eAHF,QAIO,UAJP;;AAuBA,MAAMC,QAAgC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA+B;AACtE,sBACE,QAAC,OAAD;AAAA,2BACE,QAAC,kBAAD;AAAA,6BACE,QAAC,eAAD;AAAA,+BACE;AAAK,UAAA,GAAG,EAAC,iBAAT;AAA2B,UAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD;;AAYA,OAAO,MAAMC,cAA8B,GAAG,YAAW;AACvD,SAAO;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,cAA8B,GAAG,MAAMC,OAAN,IAAkB;AAC9D,QAAM;AAAEC,IAAAA;AAAF,MAAWD,OAAO,CAACE,MAAzB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMd,GAAG,CAACe,GAAJ,CAAS,aAAYH,IAAK,EAA1B,CAAvB;AAEA,QAAMN,OAAO,GAAG;AACdU,IAAAA,EAAE,EAAEF,IAAI,CAACE,EADK;AAEdC,IAAAA,KAAK,EAAEH,IAAI,CAACG,KAFE;AAGdC,IAAAA,OAAO,EAAEJ,IAAI,CAACI,OAHA;AAIdC,IAAAA,YAAY,EAAEL,IAAI,CAACK,YAJL;AAKdC,IAAAA,sBAAsB,EAAEvB,MAAM,CAACC,QAAQ,CAACgB,IAAI,CAACK,YAAN,CAAT,EAA8B,UAA9B,EAA0C;AAAEE,MAAAA,MAAM,EAAEtB;AAAV,KAA1C,CALhB;AAMduB,IAAAA,SAAS,EAAER,IAAI,CAACQ,SANF;AAOdC,IAAAA,WAAW,EAAET,IAAI,CAACS,WAPJ;AAQdC,IAAAA,QAAQ,EAAEC,MAAM,CAACX,IAAI,CAACY,IAAL,CAAUF,QAAX,CARF;AASdG,IAAAA,iBAAiB,EAAE1B,2BAA2B,CAACwB,MAAM,CAACX,IAAI,CAACY,IAAL,CAAUF,QAAX,CAAP,CAThC;AAUdI,IAAAA,GAAG,EAAEH,MAAM,CAACX,IAAI,CAACY,IAAL,CAAUE,GAAX;AAVG,GAAhB;AAYA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLvB,MAAAA;AADK,KADF;AAILwB,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU,EAJjB,CAIqB;;AAJrB,GAAP;AAMD,CAvBM;AAyBP,eAAezB,QAAf","sourcesContent":["import React from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { GetStaticPaths, GetStaticProps } from 'next';\r\nimport format from 'date-fns/format';\r\nimport parseISO from 'date-fns/parseISO';\r\nimport ptBR from 'date-fns/locale/pt-BR';\r\n\r\nimport api from '../../services/api';\r\nimport convertDurationToTimeString from '../../utils/convertDurationToTimeString';\r\nimport { \r\n  Episode,\r\n  ThumbnailContainer,\r\n  ThumbnailButton, \r\n} from './styles';\r\n\r\ntype Episode = {\r\n  id: string,      \r\n  title: string,\r\n  members: string,\r\n  published_at: string,\r\n  thumbnail: string,\r\n  description: string,\r\n  url: string,\r\n  duration: number,\r\n  published_at_Formatted: string,\r\n  durationFormatted: string\r\n}\r\n\r\ntype EpisodeProps = {\r\n  episode: Episode;\r\n}\r\n\r\nconst episodes: React.FC<EpisodeProps> = ({ episode }: EpisodeProps) => {\r\n  return (\r\n    <Episode>\r\n      <ThumbnailContainer>\r\n        <ThumbnailButton>\r\n          <img src=\"/arrow-left.svg\" alt=\"voltar\"/>\r\n        </ThumbnailButton>\r\n      </ThumbnailContainer>\r\n    </Episode>\r\n  );\r\n}\r\n\r\nexport const getStaticPaths: GetStaticPaths = async() => {\r\n  return {\r\n    paths: [],\r\n    fallback: 'blocking',\r\n  }\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps = async(context) => {\r\n  const { slug } = context.params;\r\n\r\n  const { data } = await api.get(`/episodes/${slug}`);\r\n\r\n  const episode = {\r\n    id: data.id,\r\n    title: data.title,\r\n    members: data.members,\r\n    published_at: data.published_at,\r\n    published_at_Formatted: format(parseISO(data.published_at), 'd MMM yy', { locale: ptBR }),\r\n    thumbnail: data.thumbnail,\r\n    description: data.description,\r\n    duration: Number(data.file.duration),\r\n    durationFormatted: convertDurationToTimeString(Number(data.file.duration)),\r\n    url: Number(data.file.url),\r\n  }\r\n  return {\r\n    props: {\r\n      episode,\r\n    },\r\n    revalidate: 60 * 60 * 24, // segundos * minutos * horas\r\n  };\r\n}\r\n\r\nexport default episodes;"]},"metadata":{},"sourceType":"module"}