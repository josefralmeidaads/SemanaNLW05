{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\NLW05\\\\web\\\\src\\\\pages\\\\episodes\\\\[slug].tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { Container, Episode, ThumbnailContainer, ThumbnailButton, ButtonPlay, Header, Description } from '../../styles/stylesEpisode';\nimport { usePlayer } from '../../contexts/PlayerContext';\n\nvar episodes = function episodes(_ref) {\n  _s();\n\n  var episode = _ref.episode;\n\n  var _usePlayer = usePlayer(),\n      play = _usePlayer.play,\n      onPlayKeyboard = _usePlayer.onPlayKeyboard,\n      isPlaying = _usePlayer.isPlaying;\n\n  var audioRef = useRef(null);\n  useEffect(function () {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Episode, {\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        src: episode.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ThumbnailContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          href: \"/\",\n          children: /*#__PURE__*/_jsxDEV(ThumbnailButton, {\n            type: \"button\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/arrow-left.svg\",\n              alt: \"voltar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Image, {\n          src: episode.thumbnail,\n          alt: episode.title,\n          width: 700,\n          height: 160,\n          objectFit: \"cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(ButtonPlay, {\n          type: \"button\",\n          onClick: function onClick() {\n            return play(episode);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Tocar epis\\xF3dio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Header, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: episode.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: episode.members\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: episode.published_at_Formatted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: episode.durationFormatted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Description, {\n        dangerouslySetInnerHTML: {\n          __html: episode.description\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(episodes, \"P5fptBGQv1SMKxHyMNoebrsFKH8=\", false, function () {\n  return [usePlayer];\n});\n\nexport var __N_SSG = true;\nexport default episodes;","map":{"version":3,"sources":["C:/NLW05/web/src/pages/episodes/[slug].tsx"],"names":["React","useEffect","useRef","Link","Image","Container","Episode","ThumbnailContainer","ThumbnailButton","ButtonPlay","Header","Description","usePlayer","episodes","episode","play","onPlayKeyboard","isPlaying","audioRef","current","pause","url","thumbnail","title","members","published_at_Formatted","durationFormatted","__html","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\nimport Image from 'next/image';\r\nimport { GetStaticPaths, GetStaticProps } from 'next';\r\nimport format from 'date-fns/format';\r\nimport parseISO from 'date-fns/parseISO';\r\nimport ptBR from 'date-fns/locale/pt-BR';\r\n\r\nimport api from '../../services/api';\r\nimport convertDurationToTimeString from '../../utils/convertDurationToTimeString';\r\nimport {\r\n  Container, \r\n  Episode,\r\n  ThumbnailContainer,\r\n  ThumbnailButton,\r\n  ButtonPlay,\r\n  Header,\r\n  Description, \r\n} from '../../styles/stylesEpisode';\r\nimport { usePlayer } from '../../contexts/PlayerContext';\r\n\r\ntype Episode = {\r\n  id: string,      \r\n  title: string,\r\n  members: string,\r\n  published_at: string,\r\n  thumbnail: string,\r\n  description: string,\r\n  url: string,\r\n  duration: number,\r\n  published_at_Formatted: string,\r\n  durationFormatted: string\r\n}\r\n\r\ntype EpisodeProps = {\r\n  episode: Episode;\r\n}\r\n\r\nconst episodes: React.FC<EpisodeProps> = ({ episode }: EpisodeProps) => {\r\n  const { play, onPlayKeyboard, isPlaying } = usePlayer();\r\n  const audioRef = useRef<HTMLAudioElement>(null);\r\n\r\n  useEffect(() => {\r\n    if(!audioRef.current){\r\n      return;\r\n    }\r\n\r\n    if(isPlaying){\r\n      audioRef.current.play();\r\n    } else {\r\n      audioRef.current.pause();\r\n    }\r\n  }, [isPlaying])\r\n\r\n  return (\r\n    <Container>\r\n      <Episode>\r\n        <audio\r\n          src={episode.url}\r\n        />\r\n        <ThumbnailContainer>\r\n          <Link href=\"/\">\r\n            <ThumbnailButton type=\"button\">\r\n              <img src=\"/arrow-left.svg\" alt=\"voltar\"/>\r\n            </ThumbnailButton>\r\n          </Link>\r\n          <Image \r\n            src={episode.thumbnail}\r\n            alt={episode.title}\r\n            width={700}\r\n            height={160}\r\n            objectFit=\"cover\"\r\n          />\r\n\r\n          <ButtonPlay type=\"button\" onClick={() => play(episode)}>\r\n            <img src=\"/play.svg\" alt=\"Tocar episÃ³dio\"/>\r\n          </ButtonPlay>\r\n        </ThumbnailContainer>\r\n\r\n        <Header>\r\n          <h1>{episode.title}</h1>\r\n          <span>{episode.members}</span>\r\n          <span>{episode.published_at_Formatted}</span>\r\n          <span>{episode.durationFormatted}</span>\r\n        </Header>\r\n\r\n        <Description \r\n          dangerouslySetInnerHTML={{ __html: episode.description }}\r\n        />\r\n      </Episode>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport const getStaticPaths: GetStaticPaths = async() => {\r\n  const { data } = await api.get('/episodes', {\r\n    params: {\r\n      _limit: 2,\r\n      _sort: 'published_at',\r\n      _order: 'desc'\r\n    }\r\n  });\r\n\r\n  const paths = data.map((episode) => {\r\n    return {\r\n      params: {\r\n        slug: episode.id\r\n      },\r\n    };\r\n  })\r\n\r\n  return {\r\n    paths,\r\n    fallback: 'blocking',\r\n  }\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps = async(context) => {\r\n  const { slug } = context.params;\r\n\r\n  const { data } = await api.get(`/episodes/${slug}`);\r\n\r\n  const episode = {\r\n    id: data.id,\r\n    title: data.title,\r\n    members: data.members,\r\n    published_at: data.published_at,\r\n    published_at_Formatted: format(parseISO(data.published_at), 'd MMM yy', { locale: ptBR }),\r\n    thumbnail: data.thumbnail,\r\n    description: data.description,\r\n    duration: Number(data.file.duration),\r\n    durationFormatted: convertDurationToTimeString(Number(data.file.duration)),\r\n    url: String(data.file.url),\r\n  }\r\n  return {\r\n    props: {\r\n      episode,\r\n    },\r\n    revalidate: 60 * 60 * 24, // segundos * minutos * horas\r\n  };\r\n}\r\n\r\nexport default episodes;"]},"metadata":{},"sourceType":"module"}