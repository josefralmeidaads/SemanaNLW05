{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\NLW05\\\\web\\\\src\\\\contexts\\\\PlayerContext.tsx\";\nimport { createContext, useContext, useState } from 'react';\nexport const PlayerContext = /*#__PURE__*/createContext({});\nexport const PlayerProvider = ({\n  children\n}) => {\n  const {\n    0: episodeList,\n    1: setEpisodeList\n  } = useState([]);\n  const {\n    0: isPlaying,\n    1: setIsPlaying\n  } = useState(false);\n  const {\n    0: currentEpisodeIndex,\n    1: setCurrentEpisodeIndex\n  } = useState(0);\n  const {\n    0: enablePreviousAndNextButton,\n    1: setEnablePreviousAndNextButton\n  } = useState(false);\n  const {\n    0: isLooping,\n    1: setIsLooping\n  } = useState(false);\n\n  const play = episode => {\n    setEpisodeList([episode]);\n    setCurrentEpisodeIndex(0);\n    setIsPlaying(true);\n    setEnablePreviousAndNextButton(false);\n  };\n\n  const playList = (list, index) => {\n    setEpisodeList(list);\n    setCurrentEpisodeIndex(index);\n    setIsPlaying(true);\n    setEnablePreviousAndNextButton(true);\n  };\n\n  const togglePlay = () => {\n    setIsPlaying(!isPlaying);\n  };\n\n  const toggleLooping = () => {\n    setIsLooping(!isLooping);\n  };\n\n  const onPlayKeyboard = data => {\n    setIsPlaying(data);\n  };\n\n  const playNext = () => {\n    if (currentEpisodeIndex >= episodeList.length - 1) {\n      return setCurrentEpisodeIndex(0);\n    }\n\n    setCurrentEpisodeIndex(currentEpisodeIndex + 1);\n  };\n\n  const playPrevious = () => {\n    if (currentEpisodeIndex <= 0) {\n      return setCurrentEpisodeIndex(episodeList.length - 1);\n    }\n\n    setCurrentEpisodeIndex(currentEpisodeIndex - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: {\n      currentEpisodeIndex,\n      episodeList,\n      isPlaying,\n      play,\n      togglePlay,\n      onPlayKeyboard,\n      playList,\n      playNext,\n      playPrevious,\n      enablePreviousAndNextButton\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\nexport function usePlayer() {\n  const {\n    play,\n    togglePlay,\n    onPlayKeyboard,\n    playList,\n    playNext,\n    playPrevious,\n    enablePreviousAndNextButton,\n    currentEpisodeIndex,\n    episodeList,\n    isPlaying\n  } = useContext(PlayerContext);\n  return {\n    play,\n    togglePlay,\n    onPlayKeyboard,\n    playList,\n    playNext,\n    playPrevious,\n    enablePreviousAndNextButton,\n    currentEpisodeIndex,\n    episodeList,\n    isPlaying\n  };\n}","map":{"version":3,"sources":["C:/NLW05/web/src/contexts/PlayerContext.tsx"],"names":["createContext","useContext","useState","PlayerContext","PlayerProvider","children","episodeList","setEpisodeList","isPlaying","setIsPlaying","currentEpisodeIndex","setCurrentEpisodeIndex","enablePreviousAndNextButton","setEnablePreviousAndNextButton","isLooping","setIsLooping","play","episode","playList","list","index","togglePlay","toggleLooping","onPlayKeyboard","data","playNext","length","playPrevious","usePlayer"],"mappings":"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","sourcesContent":["import { createContext, useContext, useState } from 'react';\r\nimport { ReactNode } from 'react';\r\n\r\ninterface Episode {\r\n  id: string,      \r\n  title: string,\r\n  members: string,\r\n  published_at: string,\r\n  thumbnail: string,\r\n  description: string,\r\n  url: string,\r\n  duration: number,\r\n  published_at_Formatted: string,\r\n  durationFormatted: string\r\n}\r\n\r\ninterface PlayerContextData {\r\n  episodeList: Episode[];\r\n  currentEpisodeIndex: number;\r\n  isPlaying: boolean;\r\n  play: (episode) => void;\r\n  togglePlay: () => void;\r\n  onPlayKeyboard: (data: boolean) => void;\r\n  playList: (list: Episode[], index: number) => void;\r\n  playNext: () => void;\r\n  playPrevious: () => void;\r\n  enablePreviousAndNextButton: boolean;\r\n}\r\n\r\ninterface PlayerContextProviderProps {\r\n  children: ReactNode\r\n}\r\n\r\nexport const PlayerContext = createContext<PlayerContextData>({} as PlayerContextData);\r\n\r\nexport const PlayerProvider = ({ children }: PlayerContextProviderProps) => {\r\n  const [episodeList, setEpisodeList] = useState([]);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentEpisodeIndex, setCurrentEpisodeIndex] = useState(0);\r\n  const [enablePreviousAndNextButton, setEnablePreviousAndNextButton] = useState(false);\r\n  const [isLooping, setIsLooping] = useState(false);\r\n\r\n  const play = (episode: Episode) => {\r\n    setEpisodeList([episode]);\r\n    setCurrentEpisodeIndex(0);\r\n    setIsPlaying(true);\r\n    setEnablePreviousAndNextButton(false);\r\n  }\r\n\r\n  const playList = (list: Episode[], index: number) => {\r\n    setEpisodeList(list);\r\n    setCurrentEpisodeIndex(index);\r\n    setIsPlaying(true);\r\n    setEnablePreviousAndNextButton(true);\r\n  }\r\n\r\n  const togglePlay = () => {\r\n    setIsPlaying(!isPlaying);\r\n  }\r\n\r\n  const toggleLooping = () => {\r\n    setIsLooping(!isLooping);\r\n  }\r\n\r\n  const onPlayKeyboard = (data: boolean) => {\r\n    setIsPlaying(data);\r\n  }\r\n\r\n  const playNext = () => {\r\n    if(currentEpisodeIndex >= episodeList.length - 1){\r\n      return setCurrentEpisodeIndex(0);\r\n    }\r\n    setCurrentEpisodeIndex(currentEpisodeIndex + 1);\r\n  }\r\n\r\n  const playPrevious = () => {\r\n    if(currentEpisodeIndex <= 0){\r\n      return setCurrentEpisodeIndex(episodeList.length - 1);\r\n    }\r\n    setCurrentEpisodeIndex(currentEpisodeIndex - 1);\r\n  }\r\n\r\n  return (\r\n    <PlayerContext.Provider \r\n      value={{\r\n        currentEpisodeIndex,\r\n        episodeList,\r\n        isPlaying,\r\n        play,\r\n        togglePlay,\r\n        onPlayKeyboard,\r\n        playList,\r\n        playNext,\r\n        playPrevious,\r\n        enablePreviousAndNextButton,\r\n      }}\r\n    >\r\n      {children}\r\n    </PlayerContext.Provider>\r\n  );\r\n}\r\n\r\nexport function usePlayer(){\r\n   const { play, togglePlay, onPlayKeyboard, playList, playNext, playPrevious, enablePreviousAndNextButton, currentEpisodeIndex, episodeList, isPlaying } = useContext(PlayerContext);\r\n\r\n   return { play, togglePlay, onPlayKeyboard, playList, playNext, playPrevious, enablePreviousAndNextButton, currentEpisodeIndex, episodeList, isPlaying };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}